@version: 3.5
################################################
# This file is generated by SYSLOG-service     #
# DO NOT MODIFY -- All changes will be LOST    #
################################################

# options
options {
        dir_perm(0755);
        perm(0600);
        use_dns(no);
        chain_hostnames(no);
        flush_lines(1);
        log_fifo_size(1024);
        keep_hostname(yes);
};

# source
source local {
        internal();
        unix-dgram("/dev/log");
        file("/proc/kmsg" program_override("kernel: "));
};


# Default destinations, filters, and log paths

########################
# Destinations
########################
# First some standard logfile
#
destination d_auth { file("/var/log/auth.log" create_dirs(yes)); };
destination d_cron { file("/var/log/cron.log" create_dirs(yes)); };
destination d_daemon { file("/var/log/daemon.log" create_dirs(yes) flush_lines(10)); };
destination d_kern { file("/var/log/kern.log" create_dirs(yes) flush_lines(10)); };
destination d_lpr { file("/var/log/lpr.log" create_dirs(yes) flush_lines(10)); };
destination d_mail { file("/var/log/mail.log" create_dirs(yes)); };
destination d_syslog { file("/var/log/syslog" create_dirs(yes) flush_lines(10)); };
destination d_user { file("/var/log/user.log" create_dirs(yes) flush_lines(10)); };
destination d_uucp { file("/var/log/uucp.log" create_dirs(yes) flush_lines(10)); };

# This files are the log come from the mail subsystem.
#
destination d_mailinfo { file("/var/log/mail/mail.info" create_dirs(yes) flush_lines(10)); };
destination d_mailwarn { file("/var/log/mail/mail.warn" create_dirs(yes) flush_lines(10)); };
destination d_mailerr { file("/var/log/mail/mail.err" create_dirs(yes)); };

# Logging for INN news system
#
destination d_newscrit { file("/var/log/news/news.crit" create_dirs(yes)); };
destination d_newserr { file("/var/log/news/news.err" create_dirs(yes)); };
destination d_newsnotice { file("/var/log/news/news.notice" create_dirs(yes) flush_lines(10)); };

# Some `catch-all' logfiles.
#
destination d_debug { file("/var/log/debug" create_dirs(yes) flush_lines(10)); };
destination d_error { file("/var/log/error" create_dirs(yes) flush_lines(10)); };
destination d_messages { file("/var/log/messages" create_dirs(yes) flush_lines(10)); };

# The root's console.
#
destination d_console { usertty("root"); };

# Virtual console.
#
destination d_console_all { file("/dev/tty10"); };

# The named pipe /dev/xconsole is for the nsole' utility.  To use it,
# you must invoke nsole' with the -file' option:
#
#    $ xconsole -file /dev/xconsole [...]
#
destination d_xconsole { pipe("/dev/xconsole"); };

# Send the messages to an other host
#
#destination d_net { tcp("127.0.0.1" port(1000) authentication(on) encrypt(on) log_fifo_size(1000)); };

# Debian only
destination d_ppp { file("/var/log/ppp.log"); };

#Custom Destinations
destination d_dhcpmon { file("/var/log/dhcpmon-log" create_dirs(yes) flush_lines(10)); };
destination d_ha { file("/var/log/ha-log" create_dirs(yes) flush_lines(10)); };
destination d_update { file("/var/log/update.log" create_dirs(yes) flush_lines(10)); };

####################################################
# Begin: Send logs to Remote Servers
####################################################
destination d_arc_dnslogs { tcp("1.2.3.4" port (1234)); };
destination d_arc_syslogs { udp("5.6.7.8" port (5678)); };
####################################################
# End: Send logs to Remote Servers
####################################################

########################
# Filters
########################
# Here's come the filter options. With this rules, we can set which
# message go where.

filter f_dbg { level(debug); };
filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_err { level(err); };
filter f_crit { level(crit .. emerg); };

filter f_debug { level(debug) and not facility(auth, authpriv, news, mail); };
filter f_error { level(err .. emerg) ; };

####
###
###

filter f_messages { level(info,notice,warn) and not facility(auth,authpriv,cron,daemon,mail,news,local3) and filter(f_not_audit); };

filter f_auth { facility(auth, authpriv) and not filter(f_debug); };
filter f_cron { facility(cron) and not filter(f_debug); };
filter f_daemon { facility(daemon) and not filter(f_debug); };
filter f_kern { facility(kern) and not filter(f_debug); };
filter f_lpr { facility(lpr) and not filter(f_debug); };
filter f_local { facility(local0, local1, local3, local4, local5,
        local6, local7) and not filter(f_debug); };
filter f_mail { facility(mail) and not filter(f_debug); };
filter f_news { facility(news) and not filter(f_debug); };
filter f_syslog3 { not facility(auth, authpriv, mail, local3) and not filter(f_debug) and filter(f_not_audit); };
###
###
###
filter f_user { facility(user) and not filter(f_debug) and filter(f_not_audispd); };
filter f_uucp { facility(uucp) and not filter(f_debug); };

filter f_cnews { level(notice, err, crit) and facility(news); };
filter f_cother { level(debug, info, notice, warn) or facility(daemon, mail); };

filter f_ppp { facility(local2) and not filter(f_debug); };
filter f_console { level(warn .. emerg); };

filter f_dhcpmon { facility(local0) and level(debug .. emerg); };
filter f_ha { facility(local1) and level(debug .. emerg); };
filter f_update { facility(local2) and level(debug .. emerg); };
#################
#added for Audit
#################
filter f_not_audispd { not message ("audispd"); };
filter f_not_audit { not facility(local6); };
#################
#End of Audit
#################

##################################################################
# Begin Send logs to Remote servers
##################################################################

filter f_arc_dnslogs { facility(local3); };
filter f_arc_syslogs { not facility(local3); };

##################################################################
# End Send logs to Remote servers
##################################################################



# Log paths
########################
log { source(local); filter(f_auth); destination(d_auth); };
log { source(local); filter(f_cron); destination(d_cron); };
log { source(local); filter(f_daemon); destination(d_daemon); };
log { source(local); filter(f_kern); destination(d_kern); };
log { source(local); filter(f_lpr); destination(d_lpr); };
log { source(local); filter(f_syslog3); destination(d_syslog); };
log { source(local); filter(f_user); destination(d_user); };
log { source(local); filter(f_uucp); destination(d_uucp); };

log { source(local); filter(f_mail); destination(d_mail); };

log { source(local); filter(f_news); filter(f_crit); destination(d_newscrit); };
log { source(local); filter(f_news); filter(f_err); destination(d_newserr); };
log { source(local); filter(f_news); filter(f_notice); destination(d_newsnotice); };

log { source(local); filter(f_debug); destination(d_debug); };
log { source(local); filter(f_error); destination(d_error); };
log { source(local); filter(f_messages); destination(d_messages); };

log { source(local); filter(f_console); destination(d_console_all);
        destination(d_xconsole); };
log { source(local); filter(f_crit); destination(d_console); };

# All messages send to a remote site
#
#log { source(local); destination(d_net); };
log { source(local); filter(f_dhcpmon); destination(d_dhcpmon); };
log { source(local); filter(f_ha); destination(d_ha); };
log { source(local); filter(f_update); destination(d_update); };

# Put all psmd logs in /var/log/psmd.log
destination psmd_log_file { file("/var/log/psmd.log"); };
filter psmd_filter { program("psmd"); };
log { source(local); filter(psmd_filter); destination(psmd_log_file); };



#######################################################################
# Begin: Send logs to Remote servers
#######################################################################

log { source(local); destination (d_arc_syslogs); };
log { source(local); destination (d_arc_dnslogs); };

#######################################################################
# End: Send logs to Remote servers
#######################################################################


# filters

# destinations

# log paths
